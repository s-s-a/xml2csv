# use glob syntax.
syntax: glob

# VFP data files
*.[Ff][Pp][Tt]
*.[Cc][Dd][Xx]
*.[Dd][Bb][Ff]

# VFP generated files
*.[Ee][Rr][Rr]
*.[Mm][Pp][Rr]

# VFP compiled files
*.[Ff][Xx][Pp]
*.[Mm][Pp][Xx]
*.[Qq][Pp][Xx]

# VFP backup files
*.[Bb][Aa][Kk]
*.[Tt][Bb][Kk]

# Misc backup files
*.[Oo][Rr][Ii][Gg]
*.[Ss][Aa][Vv][Ee]
*.[Zz][Ii][Pp]

# Other files
*.chw
*.suo
*.docstates

# Folders to exclude
bin/*
obj/*
**/.vs
#Nuget packages folder
packages/
# VS Code folder
**/.vscode
**/.idea

# Specific files
*.[Ee][Xx][Ee]
*.[Dd][Ll][Ll]
*.[Aa][Pp][Pp]

*_MetaData.*
*_ref.*

#Ignore thumbnails created by Windows
Thumbs.db

#Ignore files built by Visual Studio
*.obj
*.pdb
*.user
*.aps
*.pch
*.vspscc
*_i.c
*_p.c
*.ncb
*.tlb
*.tlh
*.cache
*.ilk
*.log
*.rdp
[Bb]in
[Dd]ebug*/
*.lib
*.sbr
obj/
[Rr]elease*/
_ReSharper*/
[Tt]est[Rr]esult*
.vs/

# Masclaneus folders
tmp/*

# VFP binary files
**/*.[Pp][Jj][XxTt]
**/*.[SsVv][Cc][XxTt]
**/*.[Ff][Rr][XxTt]
**/*.[Mm][Nn][XxTt]
**/*.[Mm][Pp][Xx]
foxbin2prg.cfg


# Python section
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/ 